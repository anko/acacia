{
  "name": "Acacia",
  "tagline": "Acacia (Advanced Content-Adaptive Compressor of ImAges) is an image compression tool which allows the users to target specific image quality or file size metrics when compressing an image with JPEG or WebP, with only minimal additional compression time. It does this by using machine learning to predict how an individual image will be compressed, and adjusts the aggressiveness of compression accordingly.",
  "body": "# ACACIA\r\n\r\nACACIA (Advanced Content-Adaptive Compressor of ImAges) is an image compression tool which allows the users to target specific image quality or file size metrics when compressing an image with JPEG or WebP, with only minimal additional compression time. It does this by using machine learning to predict how an individual image will be compressed, and adjusts the aggressiveness of compression accordingly. \r\n\r\nACACIA allows users to target compression to their file size or quality needs, significantly increasing the effectiveness of compression by adjusting to each individual image. It is available with a graphical interface, and with a CLI for batch processing.\r\n\r\nACACIA is licensed under GPL3. It uses *Qt*, *libjpeg-turbo* (or *libjpeg*) and *libwebp* under their respective licenses.\r\n\r\nCurrent version: 0.17.\r\n\r\nACACIA is free, open source software. An important aspect of all research is measuring and understanding the impact of research. If you use ACACIA or even just like it, please let us know at j.thomson@st-andrews.ac.uk. This helps us greatly in funding future research.\r\n\r\nACACIA is not production software. Its primary purpose is to demonstrate research techniques.\r\n\r\nIf you would like to integrate ACACIA into your project (open source or otherwise) and would like to discuss a different licence, please get in touch.\r\n\r\nIf you use ACACIA in your research, please cite our paper describing the techniques used:\r\n\r\nPredicting and Optimizing Image Compression, In the Proceedings of the 2016 ACM Conference on Multimedia, Pages 665-669\r\nhttp://dl.acm.org/citation.cfm?doid=2964284.2967305\r\n\r\nA preprint of the paper is available at http://jt.host.cs.st-andrews.ac.uk/\r\n\r\n<p>Contacts:</br>\r\n- John Thomson - j.thomson@st-andrews.ac.uk </br>\r\n- Oleksandr Murashko - om21@st-andrews.ac.uk </br>\r\n</p>\r\n\r\nThis application has GUI and command line modes. If run without arguments it starts in GUI by default. Use \"acacia --help\" to see the list of command line options.\r\n\r\nNote: Windows version GUI doesn't scale properly on 4k screens just now. \r\n\r\nThis version of the tool is designed to work with previously uncompressed images, obtained from a camera sensor, developed raw file, or from resizing a compressed image. If the supplied image has previously be compressed, it will still work, but might be less accurate. Support for previously compressed images is planned for later versions.\r\n\r\nA test set of images can be downloaded at: http://om21.host.cs.st-andrews.ac.uk/60_test_images_CC0.zip\r\nThey are licensed under Creative Commons Zero - we are grateful to those generated them.\r\n\r\nAlpha channel and images with high-contrast vector graphics are currently not supported.\r\n\r\nTo compile and run ACACIA you need Qt library (mainly for GUI) as well as libjpeg and libwebp. This version was tested with the following external libraries: qt-4.8.7, libjpeg-turbo-1.5.0, libwebp-0.5.0. Also this program uses AVX and AVX2 vector instructions and requires a respective CPU to run.\r\n\r\n-----\r\n\r\nTo compile in Windows, Linux or OSX using Qt Creator:\r\n\r\n1. Install Qt developer tools with Qt Creator.\r\n2. Install external image compression libraries: [libjpeg-turbo](https://sourceforge.net/projects/libjpeg-turbo/files/) (may already be installed in your distribution) and [libwebp](https://developers.google.com/speed/webp/download).\r\n3. Open project file \"acacia.pro\" in Qt Creator.\r\n4. Change paths to image libraries in \"acacia.pro\" file according to your OS.\r\n5. Build project.\r\n6. Make sure all necessary external dynamic libraries can be located by application when it starts.\r\n\r\n-----\r\n\r\nTo build in Windows you can also use Visual Studio with installed \"Qt Addin\" plugin. You may need to copy some external libraries (like Qt and libjpeg dll's) alongside the executable to run it - if they are not present in the Windows PATH.\r\n\r\n-----\r\n\r\nTo build in Linux without Qt Creator go to the project directory, change paths to image libraries in \"acacia.pro\" file and execute:\r\n```\r\nqmake acacia.pro\r\nmake\r\n```\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}